{"ast":null,"code":"var http = require('http');\n\nvar url = require('url');\n\nvar express = require('express');\n\nvar app = express();\n\nvar pathPage = function pathPage(page) {\n  return __dirname + \"/src/index\" + page + \".html\";\n};\n\nvar router = function router(pathname) {\n  if (pathname && pathname != \"/\") {\n    var exist = fileExists(pathPage(pathname));\n    return exist ? pathPage(pathname) : pathPage(\"erro\");\n  }\n\n  return pathPage(\"index\");\n};\n\nvar fileExists = function fileExists(filePath) {\n  try {\n    return fs.statSync(filePath).isFile();\n  } catch (err) {\n    return false;\n  }\n};\n\nvar server = http.createServer(function (request, response) {\n  var page = router(url.parse(request.url).pathname);\n  fs.readFile(page, function (err, data) {\n    response.end(data);\n  });\n});\nserver.listen(3000, function () {\n  console.log('Servidor rodando na porta 3000');\n});","map":{"version":3,"sources":["/home/gabriel/local/coding/learning-web/pages/index.js"],"names":["http","require","url","express","app","pathPage","page","__dirname","router","pathname","exist","fileExists","filePath","fs","statSync","isFile","err","server","createServer","request","response","parse","readFile","data","end","listen","console","log"],"mappings":"AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,GAAG,GAAGD,OAAO,EAAnB;;AACA,IAAIE,QAAQ,GAAG,SAAXA,QAAW,CAASC,IAAT,EAAc;AACvB,SAAOC,SAAS,GAAG,YAAZ,GAA2BD,IAA3B,GAAkC,OAAzC;AACL,CAFD;;AAIA,IAAIE,MAAM,GAAG,SAATA,MAAS,CAASC,QAAT,EAAkB;AAC3B,MAAGA,QAAQ,IAAIA,QAAQ,IAAI,GAA3B,EAA+B;AAC3B,QAAIC,KAAK,GAAGC,UAAU,CAAEN,QAAQ,CAACI,QAAD,CAAV,CAAtB;AACA,WAAOC,KAAK,GAAGL,QAAQ,CAACI,QAAD,CAAX,GAAwBJ,QAAQ,CAAC,MAAD,CAA5C;AACH;;AACD,SAAOA,QAAQ,CAAC,OAAD,CAAf;AACH,CAND;;AAQA,IAAIM,UAAU,GAAG,SAAbA,UAAa,CAASC,QAAT,EAAkB;AAC/B,MAAG;AACC,WAAOC,EAAE,CAACC,QAAH,CAAYF,QAAZ,EAAsBG,MAAtB,EAAP;AACH,GAFD,CAEC,OAAOC,GAAP,EAAW;AACR,WAAO,KAAP;AACH;AACJ,CAND;;AAQE,IAAIC,MAAM,GAAGjB,IAAI,CAACkB,YAAL,CAAkB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC1D,MAAId,IAAI,GAAGE,MAAM,CAAEN,GAAG,CAACmB,KAAJ,CAAUF,OAAO,CAACjB,GAAlB,EAAuBO,QAAzB,CAAjB;AACAI,EAAAA,EAAE,CAACS,QAAH,CAAYhB,IAAZ,EAAkB,UAASU,GAAT,EAAcO,IAAd,EAAmB;AACjCH,IAAAA,QAAQ,CAACI,GAAT,CAAaD,IAAb;AACH,GAFD;AAGH,CALc,CAAb;AAOFN,MAAM,CAACQ,MAAP,CAAc,IAAd,EAAoB,YAAe;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,CAFD","sourcesContent":["const http = require('http');\nconst url = require('url');\nconst express = require('express');\nconst app = express();\nvar pathPage = function(page){\n      return __dirname + \"/src/index\" + page + \".html\";\n};\n\nvar router = function(pathname){\n    if(pathname && pathname != \"/\"){\n        var exist = fileExists( pathPage(pathname) );\n        return exist ? pathPage(pathname) : pathPage(\"erro\");\n    }\n    return pathPage(\"index\");\n};\n\nvar fileExists = function(filePath){\n    try{\n        return fs.statSync(filePath).isFile();\n    }catch (err){\n        return false;\n    }\n};\n\n  var server = http.createServer(function (request, response) {\n    var page = router( url.parse(request.url).pathname );\n    fs.readFile(page, function(err, data){\n        response.end(data);\n    });\n});\n\nserver.listen(3000, function (  )  {\n    console.log('Servidor rodando na porta 3000');\n});\n"]},"metadata":{},"sourceType":"script"}